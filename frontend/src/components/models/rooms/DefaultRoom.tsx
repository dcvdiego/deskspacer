/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 defaultRoom.glb -t -T 
Files: defaultRoom.glb [3.27MB] > /Users/diegochuman/Documents/GitHub/deskspacer/public/assets/rooms/defaultRoom-transformed.glb [473.39KB] (86%)
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';
import { forwardRef, JSX } from 'react';

type GLTFResult = GLTF & {
  nodes: {
    Cube002: THREE.Mesh;
    Cube002_1: THREE.Mesh;
    Cube002_2: THREE.Mesh;
    Plane: THREE.Mesh;
    Plane002: THREE.Mesh;
    Plane003: THREE.Mesh;
    Cube003: THREE.Mesh;
  };
  materials: {
    ['Material.001']: THREE.MeshStandardMaterial;
    PaletteMaterial002: THREE.MeshStandardMaterial;
    PaletteMaterial001: THREE.MeshStandardMaterial;
    ['Material.005']: THREE.MeshStandardMaterial;
    ['Material.007']: THREE.MeshStandardMaterial;
    ['Material.009']: THREE.MeshStandardMaterial;
    ['Material.024']: THREE.MeshStandardMaterial;
  };
};

const Model = forwardRef<THREE.Mesh, JSX.IntrinsicElements['group']>(
  (props: JSX.IntrinsicElements['group'], ref) => {
    const { nodes, materials } = useGLTF(
      '/glb/rooms/defaultRoom-transformed.glb'
    ) as GLTFResult;

    return (
      <group {...props} dispose={null}>
        <mesh
          geometry={nodes.Plane.geometry}
          material={materials['Material.005']}
          position={[-94.47, 41.164, -40.529]}
          rotation={[0, 0, -Math.PI / 2]}
        />
        <mesh
          geometry={nodes.Plane002.geometry}
          material={materials['Material.007']}
          position={[8.04, 64.106, -66.934]}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          geometry={nodes.Plane003.geometry}
          material={materials['Material.009']}
          position={[-30.442, 63.875, -67.092]}
          rotation={[Math.PI / 2, 0, 0]}
        />
        <mesh
          geometry={nodes.Cube003.geometry}
          material={materials['Material.024']}
          position={[-86.512, 44.056, 3.389]}
          rotation={[0, 1.571, 0]}
        />
        {/* this is floor */}
        <mesh
          ref={ref}
          geometry={nodes.Cube002.geometry}
          material={materials['Material.001']}
        />
        <mesh
          geometry={nodes.Cube002_1.geometry}
          material={materials.PaletteMaterial002}
        />
        <mesh
          geometry={nodes.Cube002_2.geometry}
          material={materials.PaletteMaterial001}
        />
      </group>
    );
  }
);

useGLTF.preload('/defaultRoom-transformed.glb');
export default Model;
